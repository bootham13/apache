trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

steps:

- task: DownloadSecureFile@1
  name: myInstanceKey
  displayName: 'Download - VM Instance SSH Key'
  inputs:
    secureFile: 'vm-instance-key.pem'

- task: DownloadSecureFile@1
  name: myChefPem
  displayName: 'Download - Chef Starter kit pem file'
  inputs:
    secureFile: 'srikarpasham.pem'

- script: |
    echo "First pipeline script"
    echo "Another line of code"

- script: |
    export CHEF_LICENSE=accept
    wget https://packages.chef.io/files/stable/chef-workstation/0.17.5/ubuntu/16.04/chef-workstation_0.17.5-1_amd64.deb
    sudo dpkg -i chef-workstation_0.17.5-1_amd64.deb
    chef -v
  displayName: 'Installing Chef Workstation'

- script: |
    export CHEF_LICENSE=accept
    chef gem install kitchen-docker
  displayName: 'Installing kitchen-docker gem'

- script: |
    echo "Writing $(myChefPem.secureFilePath) to the .chef directory"
    mkdir .chef
    sudo ln -s $(myChefPem.secureFilePath) .chef/chefPem
    ls -la .chef/
  displayName: 'Writing Chef pem file'

- script: |
    echo "Writing $(myInstanceKey.secureFilePath) to the .chef directory"
    sudo ln -s $(myInstanceKey.secureFilePath) .chef/vmInstanceKey
    ls -la .chef/
  displayName: 'Writing VM Instance SSH Key'

- script: |
   /opt/chef-workstation/bin/chef exec cookstyle . --except Layout/EndOfLine 
  displayName: 'Run Cookstyle'

- script: | 
    kitchen destroy
  displayName: 'Destroy any existing kitchen'

- script: |
    kitchen create
  displayName: 'Create a new kitchen'

- script: | 
    kitchen converge
  displayName: 'Converge the new kitchen'

- script: |
    kitchen verify
  displayName: 'verify your tests against the new kitchen'

- script: |
    kitchen destroy
  displayName: 'Destroy the kitchen'
